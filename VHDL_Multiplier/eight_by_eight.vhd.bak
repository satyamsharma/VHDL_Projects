library ieee;
use ieee.std_logic_1164.all;

entity multiplier8 is
port (a_in,b_in : in std_logic_vector (7 downto 0);
      p : out std_logic_vector (15 downto 0));
end mult;

architecture multiplier of multiplier8 is

component rca8 
    port(a, b : in std_logic_vector(7 downto 0);
         cout : out std_logic;
			sum : out std_logic_vector(7 downto 0));
end component;

signal andgate: std_logic_vector(63 downto 0);
type arr is array (6 downto 0, 7 downto 0) of integer;
signal sumout : arr;
signal carry: std_logic_vector(55 downto 0);

begin                           
    andgate(0) <= a_in(0) and b_in(0);
    andgate(1) <= a_in(1) and b_in(0);
    andgate(2) <= a_in(2) and b_in(0);
    andgate(3) <= a_in(3) and b_in(0);
    andgate(4) <= a_in(4) and b_in(0);
    andgate(5) <= a_in(5) and b_in(0);
    andgate(6) <= a_in(6) and b_in(0);
    andgate(7) <= a_in(7) and b_in(0);
	
    andgate(8) <= a_in(0) and b_in(1);
    andgate(9) <= a_in(1) and b_in(1);
    andgate(10) <= a_in(2) and b_in(1);
    andgate(11) <= a_in(3) and b_in(1);
    andgate(12) <= a_in(4) and b_in(1);
    andgate(13) <= a_in(5) and b_in(1);
    andgate(14) <= a_in(6) and b_in(1);
    andgate(15) <= a_in(7) and b_in(1);
	 
    andgate(16) <= a_in(0) and b_in(2);
    andgate(17) <= a_in(1) and b_in(2);
    andgate(18) <= a_in(2) and b_in(2);
    andgate(19) <= a_in(3) and b_in(2);
    andgate(20) <= a_in(4) and b_in(2);
    andgate(21) <= a_in(5) and b_in(2);
    andgate(22) <= a_in(6) and b_in(2);
    andgate(23) <= a_in(7) and b_in(2);
	 
    andgate(24) <= a_in(0) and b_in(3);
    andgate(25) <= a_in(1) and b_in(3);
    andgate(26) <= a_in(2) and b_in(3);
    andgate(27) <= a_in(3) and b_in(3);
    andgate(28) <= a_in(4) and b_in(3);
    andgate(29) <= a_in(5) and b_in(3);
    andgate(30) <= a_in(6) and b_in(3);
    andgate(31) <= a_in(7) and b_in(3);

    andgate(32) <= a_in(0) and b_in(4);
    andgate(33) <= a_in(1) and b_in(4);
    andgate(34) <= a_in(2) and b_in(4);
    andgate(35) <= a_in(3) and b_in(4);
    andgate(36) <= a_in(4) and b_in(4);
    andgate(37) <= a_in(5) and b_in(4);
    andgate(38) <= a_in(6) and b_in(4);
    andgate(39) <= a_in(7) and b_in(4);

    andgate(40) <= a_in(0) and b_in(5);
    andgate(41) <= a_in(1) and b_in(5);
    andgate(42) <= a_in(2) and b_in(5);
    andgate(43) <= a_in(3) and b_in(5);
    andgate(44) <= a_in(4) and b_in(5);
    andgate(45) <= a_in(5) and b_in(5);
    andgate(46) <= a_in(6) and b_in(5);
    andgate(47) <= a_in(7) and b_in(5);

    andgate(48) <= a_in(0) and b_in(6);
    andgate(49) <= a_in(1) and b_in(6);
    andgate(50) <= a_in(2) and b_in(6);
    andgate(51) <= a_in(3) and b_in(6);
    andgate(52) <= a_in(4) and b_in(6);
    andgate(53) <= a_in(5) and b_in(6);
    andgate(54) <= a_in(6) and b_in(6);
    andgate(55) <= a_in(7) and b_in(6);
	 
    andgate(56) <= a_in(0) and b_in(7);
    andgate(57) <= a_in(1) and b_in(7);
    andgate(58) <= a_in(2) and b_in(7);
    andgate(59) <= a_in(3) and b_in(7);
    andgate(60) <= a_in(4) and b_in(7);
    andgate(61) <= a_in(5) and b_in(7);
    andgate(62) <= a_in(6) and b_in(7);
    andgate(63) <= a_in(7) and b_in(7);

    --Gates
    rca80: rca8 port map(sum(7) => sumout(0,7), sum(6) => sumout(0,6), sum(5) => sumout(0,5), sum(4) => sumout(0,4), sum(3) => sumout(0,3), sum(2) => sumout(0,2),sum(1) => sumout(0,1), sum(0) => sumout(0,0), a => andgate(1), b => andgate(4), cout => carry(0));
    rca81: rca8 port map(sum => sumout(1), a => andgate(2), b => andgate(5), cout => carry(1));
    rca82: rca8 port map(sum => sumout(2), a => andgate(3), b => andgate(6), cout => carry(2));
    rca83: rca8 port map(sum => sumout(3), a => '0', b => andgate(7), cout => carry(3));
    rca84: rca8 port map(sum => sumout(4), a => sumout(1), b => andgate(8), cout => carry(4));
    rca85: rca8 port map(sum => sumout(5), a => sumout(2), b => andgate(9), cout => carry(5));
    rca86: rca8 port map(sum => sumout(6), a => sumout(3), b => andgate(10), cout => carry(6));

    --Assigning p values
    p(0) <= andgate(0);
    p(1) <= sumout(0);
    p(2) <= sumout(4);
    p(3) <= sumout(8);
    p(4) <= sumout(9);
    p(5) <= sumout(10);
    p(6) <= sumout(11);
    p(7) <= carry(11);

end multiplier;